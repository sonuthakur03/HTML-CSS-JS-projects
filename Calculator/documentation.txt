#### HTML documentation

1. `<!DOCTYPE html>`: Declares the document type and version of HTML being used.

2. `<html lang="en">`: The root element of the HTML document. It specifies the language of the document.

3. `<head>`: Contains meta-information about the HTML document, such as character encoding, viewport settings, stylesheets, scripts, and more.

    - `<meta charset="UTF-8">`: Sets the character encoding for the document to UTF-8.
    - `<meta name="viewport" content="width=device-width, initial-scale=1.0">`: Defines the viewport settings for responsive web design.
    - `<style>`: Contains CSS styles for styling the HTML elements within the document.
    - `<script src="js/index.js"></script>`: Links an external JavaScript file to the HTML document.
    - `<title>Calculator</title>`: Sets the title of the HTML document, which is displayed in the browser's title bar or tab.

4. `<body>`: Contains the content of the HTML document that is rendered in the browser.

    - `<div class="bubbles">`: Contains span elements used for creating animated bubbles in the background.
    - `<div class="container">`: Contains the main content of the calculator.
    
        - `<form action="#" name="forms">`: Defines a form named "forms" with no action specified.
        
            - `<input type="text" name="answer">`: Defines a text input field named "answer" for displaying and entering calculations.
            
            - `<div class="buttons">`: Groups the calculator buttons into rows.
            
                - `<input type="button" value="AC" onclick="forms.answer.value = ''">`: Clears the input field when clicked.
                - `<input type="button" value="DEL" onclick="forms.answer.value = forms.answer.value.substr(0 , forms.answer.value.length -1)">`: Deletes the last character from the input field.
                - Other `<input>` elements represent numeric and operator buttons. Each button appends its respective value to the input field when clicked.
                - `<input type="button" value="=" onclick="forms.answer.value = eval(forms.answer.value)">`: Calculates the result of the expression entered in the input field using JavaScript's `eval()` function when clicked.

#### CSS documentation

Certainly! Here's a detailed explanation of the CSS code provided:

1. `@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');`: Imports the Google Font "Poppins" with various weights for use in the document.

2. `*`: Selects all elements in the document.

    - `margin: 0; padding: 0;`: Removes default margin and padding from all elements.
    - `box-sizing: border-box;`: Ensures that padding and border are included in the element's total width and height.
    - `font-family: "Poppins", sans-serif;`: Sets the default font family for all elements to "Poppins" or a generic sans-serif font.

3. `body`: Styles the `<body>` element.

    - `height: 100vh; width: 100%;`: Sets the height and width of the body to occupy the full viewport.
    - `background: linear-gradient(to bottom, #2196f3 0%, #e91e63 100%);`: Applies a linear gradient background from blue (#2196f3) to pink (#e91e63).
    - `display: flex; justify-content: center; align-items: center;`: Centers the content horizontally and vertically using Flexbox.
    - `overflow: hidden;`: Hides any content that overflows the body.
    - `position: relative;`: Sets the position of the body to relative.

4. `.bubbles`: Styles the container for the animated bubbles.

    - `display: flex; justify-content: space-around;`: Displays the bubbles horizontally with equal space between them.
    - `position: absolute; bottom: -150px;`: Positions the bubbles at the bottom of the viewport, partially outside the body.
    - `width: 100%;`: Sets the width of the bubbles container to 100%.

5. `.bubbles span`: Styles each individual bubble.

    - `height: 60px; width: 60px;`: Sets the height and width of each bubble.
    - `background: rgba(255,255,255,0.3);`: Sets the background color of the bubbles to a semi-transparent white.
    - `box-shadow: 0 20px 50px rgba(0,0,0,0.15);`: Applies a shadow effect to the bubbles.
    - `backdrop-filter: blur(5px);`: Applies a blur effect to the background behind the bubbles.
    - `animation: move 10s linear infinite;`: Specifies the animation properties for the bubbles, moving them vertically over 10 seconds in a linear fashion infinitely.
    - `position: relative; overflow: hidden;`: Sets the position of the bubbles to relative and hides any overflowing content.

6. `@keyframes move`: Defines the animation for moving the bubbles vertically.

    - Specifies the animation from the starting position to the ending position.

7. `.container`: Styles the calculator container.

    - `width: 360px;`: Sets the width of the container.
    - `background: rgba(255,255,255,0.3);`: Sets the background color of the container to a semi-transparent white.
    - `z-index: 999;`: Sets the stacking order of the container to appear above other elements.
    - `padding: 15px;`: Adds padding inside the container.
    - `backdrop-filter: blur(5px);`: Applies a blur effect to the background behind the container.
    - `box-shadow: 0 20px 50px rgba(0,0,0,0.15);`: Applies a shadow effect to the container.
    - `border-radius: 12px;`: Adds rounded corners to the container.

8. `.container input[type="text"]`: Styles the input field for displaying calculations.

    - `width: 100%; height: 100px;`: Sets the width and height of the input field.
    - `margin: 0 3px;`: Adds margin to the input field.
    - `font-size: 20px;`: Sets the font size of the text in the input field.
    - `border: none; outline: none;`: Removes the border and outline styles.
    - `background: transparent;`: Sets the background of the input field to transparent.
    - `color: white;`: Sets the text color to white.
    - `padding-right: 10px;`: Adds padding to the right side of the input field.
    - `text-align: right;`: Aligns the text to the right within the input field.

9. `.container input[type="button"]`: Styles the calculator buttons.

    - `height: 65px;`: Sets the height of the buttons.
    - `color: #fff;`: Sets the text color to white.
    - `width: calc(100% / 4 - 5px);`: Sets the width of each button to one-fourth of the container's width minus 5 pixels.
    - `background: transparent;`: Sets the background of the buttons to transparent.
    - `border-radius: 12px;`: Adds rounded corners to the buttons.
    - `margin-top: 15px;`: Adds margin to the top of the buttons.
    - `border: none; outline: none;`: Removes the border and outline styles.
    - `font-size: 20px;`: Sets the font size of the text in the buttons.
    - `cursor: pointer;`: Changes the cursor to a pointer when hovering over the buttons.
    - `transition: 0.3s;`: Adds a transition effect for smoother button hover effects.

10. `.container input[type="button"]:hover`: Styles the buttons on hover.

    - `background: rgba(255,255,255,0.3);`: Sets the background color of the buttons to a semi-transparent white on hover.

This HTML code creates a simple calculator interface with a background animation of moving bubbles. Users can input mathematical expressions and perform calculations using the provided buttons. CSS code styles the HTML elements to create a visually appealing calculator interface with animated background bubbles. The use of Flexbox and CSS transitions ensures responsive design and smooth user interaction.